## Creating files and directories

mkdir -p 13f # or however you want to name your working directory
cd 13f

git clone ssh://gitosis@qmp.cat:221/qmp.git; cd qmp; git checkout --track origin/autoconfig; cd ..
svn co svn://svn.openwrt.org/openwrt/branches/backfire
git clone git://gitorious.org/eigennet/packages.git eigennet/packages


cd backfire
rm -rf feeds/
ln -s ../../dl # wherever you already have some openwrt downloads...
ln -s ../qmp/files
ln -s ../qmp/feeds.conf

nano feeds.conf  # adapt path to .../13f/packages

./scripts/feeds update -a
./scripts/feeds install -a

## Configuring system
make menuconfig
* Target System  (BCM947xxx, x86, atheros,...)
* Target Profile (WGT634u, wrap, alix, routerstation,...) 
(* Global build-settings -> Compile teh kernel with profiling enabled )
(* Advanced configuration options for developers -> Toolchain options -> Build gdb )
* Base system ->
    qmp-big-node # for 8Mbyte flash devices  
    qmp-small-node # for 4MByte flash devices STILL TO BIG due to ipv6calc!!! Dont TEST

* remove for 4MByte-flash devices: network -> ppp
* remove for 4MByte-flash devices: network -> ppad-mini

## Optional, to have HT40 in IBSS mode: Patching files
cp ../qmp/patches/004-ibss.patch package/mac80211/patches/
cp ../qmp/patches/002-ibss_ht40.patch package/iw/patches/
patch -p1 -i ../qmp/patches/mac80211.sh_ht40.patch package/mac80211/files/lib/wifi/mac80211.sh 
rm package/mac80211/patches/542-mac80211_enable_iftype_wds_aggregation.patch

## Kernel configuration
make kernel_menuconfig 
(* File systems -> Dnotify support && Inotify file change notification support && Inotify support for userspace )

## Compiling
time make V=99

#### INSTALL ####

## wgt634u: (tested)
scp bin/brcm47xx/openwrt-brcm47xx-squashfs.trx root@192.168.1.1:/tmp/
ssh root@192.168.1.1
mtd -r write /tmp/openwrt-brcm47xx-squashfs.trx linux # do not reboot for a while to let filesystem cleanup

## fonera: (tested)
scp bin/atheros/openwrt-atheros-vmlinux.lzma bin/atheros/openwrt-atheros-root.squashfs root@192.168.1.1:/tmp/
ssh root@192.168.1.1
mtd -e vmlinux.bin.l7 write /tmp/openwrt-atheros-vmlinux.lzma vmlinux.bin.l7
mtd -r -e rootfs write /tmp/openwrt-atheros-root.squashfs rootfs

## alix: (untested)
sudo dd if=bin/x86/openwrt-x86-generic-combined-squashfs.img of=/dev/sdX

## routerstation:
tftp 192.168.1.20
 mode octet
 trace on
 put openwrt*ubnt*.bin


